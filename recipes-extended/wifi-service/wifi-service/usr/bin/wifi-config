#!/bin/sh

## global variables
WPA_IFACE="wlan0"

# wpa_supplicant variables
WPA_SUP_BIN="/usr/sbin/wpa_supplicant"
WPA_SUP_PNAME="wpa_supplicant"

# wpa_cli variables
WPA_CLI_BIN="/usr/sbin/wpa_cli"
WPA_CLI_PNAME="wpa_cli"

#####################################################################
## verbose and stderr message wrapper
# Ensures a standard and easily identifiable message is printed by
# scripts using this function library.
#
# log		Log a message to syslog when called non-interactively
#		by wpa_action
#
# verbose	To stdout when IF_WPA_VERBOSITY or VERBOSITY is true
#
# action	Same as verbose but without newline
#		Useful for allowing wpa_cli commands to echo result
#		value of 'OK' or 'FAILED'
#
# stderr	Echo warning or error messages to stderr
#
# NB: when called by wpa_action, there is no redirection (verbose)
#
wpa_msg () {
	case "$1" in 
		"verbose")
			shift
			echo "$WPA_SUP_PNAME: $@" >$TO_NULL
			;;
		"action")
			shift
			echo -n "$WPA_SUP_PNAME: $@ -- " >$TO_NULL
			;;
		"stderr")
			shift
			echo "$WPA_SUP_PNAME: $@" >/dev/stderr
			;;
		*)
			;;
	esac
}

#####################################################################
## wpa_cli wrapper
# Path to common ctrl_interface socket and iface supplied.
# NB: WPA_CTRL_DIR cannot be used for interactive commands, it is
# set only in the environment that wpa_cli provides when processing
# action events.
#
wpa_cli () {
    local RESULT;
    RESULT=`"$WPA_CLI_BIN" -i "$WPA_IFACE" "$@"`

    wpa_msg stderr "$WPA_CLI_BIN -i $WPA_IFACE $@"
    wpa_msg stderr "$? / $RESULT"

    if [ "$?" -ne 0 ]; then
        wpa_msg stderr "$WPA_CLI_BIN failed to execute shell command($@)"
        return 1
    fi

    return 0
}

do_configure () {
    wpa_cli select_network 0
    wpa_cli disable_network 0
    wpa_cli set_network 0 ssid \"$1\"
    wpa_cli set_network 0 psk \"$2\"
    wpa_cli set_network 0 key_mgmt $3
    wpa_cli enable_network 0
    wpa_cli select_network 0

    wpa_cli save_config

    if [ -e /var/run/udhcpc.pid ]; then
        UDHCPC_PID=`cat /var/run/udhcpc.pid`
        kill -9 $UDHCPC_PID
    fi

    udhcpc -b -R -i $WPA_IFACE -p /var/run/udhcpc.pid
}

# verbosity variables
if [ -n "$IF_WPA_VERBOSITY" ] || [ "$VERBOSITY" = "1" ]; then
	TO_NULL="/dev/stdout"
else
	TO_NULL="/dev/null"
fi

# quit if executables are not installed
if [ ! -x "$WPA_SUP_BIN" ] || [ ! -x "$WPA_CLI_BIN" ]; then
	exit 0
fi

do_configure "$1" "$2" $3

exit 0
